// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2023 Microsemi Corporation
 */

#if defined(linux)
/* We don't want "linux" expanded! */
#undef linux
#endif

#if defined(CONFIG_MMC_SDHCI)
bootcmd=run mmc_boot

mmcaddr=760000000
mmc_cur=1
mmc_bak=2
mmc_dev=mmc 0
mmc_image=new.ext4.gz

mmc_format=gpt guid ${mmc_dev} mmc_guid;
	gpt write ${mmc_dev} ${mmc_part};
	env save

mmc_swap=env set mmc_cur ${mmc_bak};
	env save

mmc_dlup=dhcp ${mmc_image};
	unzip ${fileaddr} ${mmcaddr};
	run mmc_update

mmc_set_blkcnt=setexpr mmc_blkcnt ${filesize} + 0x1ff;
	setexpr mmc_blkcnt ${mmc_blkcnt} / 0x200

mmc_update=run mmcgetoffset;
	run mmc_set_blkcnt;
	mmc write ${mmcaddr} ${mmc_start} ${mmc_blkcnt}

mmc_boot=run mmc_tryboot;
	env set mmc_cur ${mmc_bak};
	run mmc_tryboot

mmc_tryboot=run mmcload;
	setenv mtdroot root_next=/dev/mmcblk0p${mmc_cur};
	run ramboot

mmcgetoffset=part start ${mmc_dev} ${mmc_cur} mmc_start

mmcload=ext4load ${mmc_dev}:${mmc_cur} ${loadaddr} Image.itb

mmc_part=uuid_disk=${mmc_guid};name=Boot0,size=1024MiB,type=linux;name=Boot1,size=1024MiB,type=linux;name=Data,size=1536MiB,type=linux

#elif defined(CONFIG_MTD_SPI_NAND)
bootcmd=run nand_boot

nand_cur=0
nand_bak=1
nand_image=new.ubifs

nand_mtdroot=root=ubi0:rootfs ro rootfstype=ubifs

nand_swap=env set nand_cur ${nand_bak};
	env save

nand_dlup=dhcp ${nand_image};
	run nand_update

nand_update=sf probe;
	mtd erase Boot${nand_cur};
	ubi part Boot${nand_cur};
	ubi create rootfs -;
	ubi write ${fileaddr} rootfs ${filesize}

nandload=sf probe;
	ubi part Boot${nand_cur};
	ubifsmount ubi0:rootfs;
	ubifsload - /Image.itb

nand_boot=run nand_tryboot;
	env set nand_cur ${nand_bak};
	run nand_tryboot

nand_tryboot=run nandload;
	setenv mtdroot ubi.mtd=Boot${nand_cur},2048 ${nand_mtdroot};
	run ramboot

#endif

bootargs_extra=loglevel=4
bootdelay=3

loadaddr=740000000

console=ttyS0,115200n8

rootargs=root=/dev/ram0 rw rootfstype=squashfs

setup=setenv bootargs console=${console} ${mtdparts}
 ${rootargs} ${mtdroot} fis_act=${active} ${bootargs_extra}

nor_boot=sf probe;
	env set active linux; run nor_tryboot;
	env set active linux.bk; run nor_tryboot

nor_tryboot=mtd read ${active} ${loadaddr}; run ramboot

nor_image=new.itb

nor_dlup=dhcp ${nor_image}; run nor_update

nor_update=sf probe; sf update ${fileaddr} linux ${filesize}

nor_parts=spi0.0:1m(UBoot),256k(Env),256k(Env.bk),46m(linux),46m(linux.bk),32m(rootfs_data)

nor_only=env set mtdparts mtdparts=${nor_parts}; env set bootcmd run nor_boot; env save

ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize}

ramboot=run setup; bootm ${loadaddr}#${pcb}
